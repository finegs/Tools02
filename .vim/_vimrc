set nocompatible
filetype off
" SET RUNTIMEPATH
set rtp+=$VIM/vimfiles/bundle/Vundle.vim
"set rtp+=$VIM/vimfiles/bundle/YouCompleteMe
"set rtp+=~/.vim/bundle/Vundle.vim
"set rtp+=~/.vim/bundle/YouCompleteMe


" Call VUNDLE 
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'majutsushi/tagbar.git'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'scrooloose/syntastic'
Plugin 'Valloric/YouCompleteMe'

call vundle#end()

filetype on
set nocompatible

colorscheme darkblue
set guifont=Consolas:h12
set enc=utf-8
set fenc=utf-8
set termencoding=utf-8
set nocompatible
set autoindent
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set noerrorbells visualbell t_vb=
set hls
set nowrap

set textwidth=120
"set t_Co=256
syntax on
set number
set showmatch
set comments=sl:/*,mb:\ *,elx:\ */

set path+=.,..,../..,./*,./*/*,.../*,~/,~/**,/usr/include/*

"set mouse to nothing ( ex, 'v' is visual mode when mouse clicked )
set mouse=

set tags=tags
set tags+=$MINGW_HOME/include/tags
set tags+=$MINGW_HOME/x86_64-w64-mingw32/include/tags
set tags+=$MSYS_HOME/usr/include/tags
"set tags+=~/.vim/ctags/tags
"set tags+=~/.vim/ctags/cpp
"set tags+=~/.vim/ctags/gl
"set tags+=~/.vim/ctags/gtk

" NERD Tree 
let NERDChistmasTree=0
let NERDTreeWinSize=15
let NERDTreeChDirMode=2
let NERDTreeIgnore=['\~$', '\.pyc$', '\.swp']
let NERDTreeShowBookmarks=1
let NERDTreeWinPos="left"

let NERDSpaceDelims=1
let NERDCompactSexyComs=1

" Tagbar
let g:tagbar_left=1
let g:tagbar_vertical=15
let g:tagbar_width=15

"Syntastic Setting
set statusline+=%#warningmsg#
set statusline+=${SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_cpp_checkers = ['g++']
let g:syntastic_cpp_compiler = 'g++'
let g:syntastic_cpp_compiler_options = '-std=c++1y'

nmap <Tab> <C-W>w
nmap <S-TAB> <C-W><C-P>
map <F2> :w<CR><ESC>
nmap <F2> :w<CR><ESC>
imap <F2> <ESC> :w<CR>i
"map <F4> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR>
"map <F5> :make clean all<CR>
"map <F4> :!ctags -R -c++kinds=+p -fields=+ias -extra=+q .<CR>
map <F4> :!ctags -R -extra=+f .<CR>

map <F5> :cn<CR>
map <S-F5> :cp<CR>
map <C-F5> :cl<CR>

map <F7> :make debug<CR>
map <S-F7> :make clean debug<CR>
map <C-F7> :make release<CR>

"map <F11> <C-t>
"map <F12> <C-]>

map <C-n> <ESC>:NERDTreeToggle<CR>
map <C-t> <ESC>:TagbarToggle<CR>

map <F3> <ESC><C-]>
map <S-F3> <ESC><C-t>

"map for move lines
map <S-Up> :m-1<CR>
map <S-Down> :m+1<CR>
imap <S-Up> <ESC>:m-1<CR>
imap <S-Down> <ESC>:m+1<CR>

nnoremap ,<Up>   :<C-u>silent! move-2<CR>==
nnoremap ,<Down> :<C-u>silent! move+<CR>==
xnoremap ,<Up>   :<C-u>silent! '<,'>move-2<CR>gv=gv
xnoremap ,<Down> :<C-u>silent! '<,'>move'>+<CR>gv=gv


"Call Plugins
":TagbarToggle
":NERDTree

" Remove Include serach file paths
" ctags -R -n --fields=+i+K+S+l+m+a --exclude=src/react/conf-srch/node_modules
set complete-=i

let g:ctrlp_user_command = 'ag %s -i -nocolor --nogroup -- hidden \
                                     \ --ignore .git
                                     \ --ignore .svn
                                     \ --ignore .hg
                                     \ --ignore .DS_Store
                                     \ --ignore "**/*.pyc"
                                     \ -g ""'


"YouCompleteMe
let g:ycm_use_clangd = 1
let g:ycm_clangd_binary_path = "G:\Programs\LLVM\LLVM\bin"
let g:ycm_global_ycm_extra_conf = "C:\Users\fineg\.vim\bundle\YouCompleteMe\.ycm_extra_conf.py"


function MyFont()
    if has('gui_running')
        "set guioption-=T " No Toolbar
        colorscheme darkblue
        set lines=45 columns=120 linespace=0
        if has('gui_win32')
            set guifont=Consolas:h12:cANSI
        else
            set guifont=Consolas\ 10
        endif
    endif
endfunction

" FileType
" enable filetype detection:
filetype on
filetype plugin on
filetype indent on " file type based indentation

" recognize anything in my .Postponed directory as a news article, and anything
" at all with a .txt extension as being human-language text [this clobbers the
" `help' filetype, but that doesn't seem to prevent help from working
" properly]:
augroup filetype
  autocmd BufNewFile,BufRead */.Postponed/* set filetype=mail
  autocmd BufNewFile,BufRead *.txt set filetype=human
  autocmd BufNewFile,BufRead *.mk set filetype=make
augroup END

autocmd FileType mail set formatoptions+=t textwidth=72 " enable wrapping in mail
autocmd FileType human set formatoptions-=t textwidth=0 " disable wrapping in txt

" for C-like  programming where comments have explicit end
" characters, if starting a new line in the middle of a comment automatically
" insert the comment leader characters:
autocmd FileType c,cpp,java set formatoptions+=ro
autocmd FileType c set omnifunc=ccomplete#Complete

" fixed indentation should be OK for XML and CSS. People have fast internet
" anyway. Indentation set to 2.
autocmd FileType html,xhtml,css,xml,xslt set shiftwidth=2 softtabstop=2

" two space indentation for some files
autocmd FileType vim,lua,nginx set shiftwidth=2 softtabstop=2

" for CSS, also have things in braces indented:
autocmd FileType css set omnifunc=csscomplete#CompleteCSS

" add completion for xHTML
autocmd FileType xhtml,html set omnifunc=htmlcomplete#CompleteTags

" add completion for XML
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags

" in makefiles, don't expand tabs to spaces, since actual tab characters are
" needed, and have indentation at 8 chars to be sure that all indents are tabs
" (despite the mappings later):
autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0

" ensure normal tabs in assembly files
" and set to NASM syntax highlighting
autocmd FileType asm set noexpandtab shiftwidth=8 softtabstop=0 syntax=nasm
